{"ast":null,"code":"var _jsxFileName = \"/Users/alexkondratiuk/Desktop/whats-for-dinner-1/front-end/src/ShareRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ShareRecipe.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShareRecipe = () => {\n  _s();\n  // Set up state variables to track form input\n  const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n  const [ingredients, setIngredients] = useState([]);\n  const [instructions, setInstructions] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  // Handle form submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Create recipe object with form input\n    const recipe = {\n      title: title,\n      ingredients: ingredients,\n      instructions: instructions,\n      image: image\n    };\n    // Send recipe data\n\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('instructions', instructions);\n    formData.append('ingredients', JSON.stringify(ingredients));\n    formData.append('image', image);\n    console.log(recipe);\n    const response = await fetch('http://localhost:3000/share-recipes', {\n      method: 'POST',\n      body: formData\n    });\n    if (response.ok) {\n      console.log('Recipe submitted successfully!');\n    } else {\n      // handle error response\n      console.error('Error submitting recipe:', response.statusText);\n    }\n\n    // Reset form input\n    setTitle(\"\");\n    // setDescription(\"\");\n    setIngredients([]);\n    setInstructions(\"\");\n    setImage(null);\n  };\n\n  // Handle ingredient input\n  const handleIngredientInput = (e, index) => {\n    const newIngredients = [...ingredients];\n    newIngredients[index] = e.target.value;\n    setIngredients(newIngredients);\n  };\n\n  // Handle adding new ingredient input field\n  const handleAddIngredientField = () => {\n    setIngredients([...ingredients, \"\"]);\n  };\n\n  // Handle uploading a picture of the recipe\n  const handleImageUpload = e => {\n    setImage(e.target.files[0]);\n  };\n\n  // Render form for entering recipe information\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"ingredients\",\n      children: \"Ingredients:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: ingredient,\n      onChange: e => handleIngredientInput(e, index),\n      required: true\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddIngredientField,\n      children: \"Add Ingredient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"instructions\",\n      children: \"Instructions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"instructions\",\n      value: instructions,\n      onChange: e => setInstructions(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"image\",\n      children: \"Image:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"image\",\n      accept: \".jpg,.jpeg,.png\",\n      onChange: handleImageUpload,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Share Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ShareRecipe, \"FWeL7t27YdcXhGRx1TtNpxB85hg=\");\n_c = ShareRecipe;\nexport default ShareRecipe;\nvar _c;\n$RefreshReg$(_c, \"ShareRecipe\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ShareRecipe","_s","title","setTitle","ingredients","setIngredients","instructions","setInstructions","image","setImage","handleSubmit","e","preventDefault","recipe","formData","FormData","append","JSON","stringify","console","log","response","fetch","method","body","ok","error","statusText","handleIngredientInput","index","newIngredients","target","value","handleAddIngredientField","handleImageUpload","files","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","map","ingredient","onClick","accept","_c","$RefreshReg$"],"sources":["/Users/alexkondratiuk/Desktop/whats-for-dinner-1/front-end/src/ShareRecipe.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ShareRecipe.css\"\n\nconst ShareRecipe = () => {\n  // Set up state variables to track form input\n  const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n  const [ingredients, setIngredients] = useState([]);\n  const [instructions, setInstructions] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  // Handle form submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Create recipe object with form input\n    const recipe = {\n      title: title,\n      ingredients: ingredients,\n      instructions: instructions,\n      image: image,\n    };\n    // Send recipe data\n\n\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('instructions', instructions);\n    formData.append('ingredients', JSON.stringify(ingredients));\n    formData.append('image', image);\n\n    console.log(recipe);\n    const response = await fetch('http://localhost:3000/share-recipes', {\n        method: 'POST',\n        body: formData\n    });\n\n    if(response.ok){\n      console.log('Recipe submitted successfully!');\n    }else {\n      // handle error response\n      console.error('Error submitting recipe:', response.statusText);\n    }\n\n    // Reset form input\n    setTitle(\"\");\n    // setDescription(\"\");\n    setIngredients([]);\n    setInstructions(\"\");\n    setImage(null);\n  };\n\n  // Handle ingredient input\n  const handleIngredientInput = (e, index) => {\n    const newIngredients = [...ingredients];\n    newIngredients[index] = e.target.value;\n    setIngredients(newIngredients);\n  };\n\n  // Handle adding new ingredient input field\n  const handleAddIngredientField = () => {\n    setIngredients([...ingredients, \"\"]);\n  };\n\n  // Handle uploading a picture of the recipe\n  const handleImageUpload = (e) => {\n    setImage(e.target.files[0]);\n  };  \n\n  // Render form for entering recipe information\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"title\">Title:</label>\n      <input\n        type=\"text\"\n        id=\"title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        required\n      />\n\n      {/* <label htmlFor=\"description\">Description:</label>\n      <textarea\n        id=\"description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        required\n      ></textarea> */}\n\n      <label htmlFor=\"ingredients\">Ingredients:</label>\n      {ingredients.map((ingredient, index) => (\n        <input\n          key={index}\n          type=\"text\"\n          value={ingredient}\n          onChange={(e) => handleIngredientInput(e, index)}\n          required\n        />\n      ))}\n      <button type=\"button\" onClick={handleAddIngredientField}>\n        Add Ingredient\n      </button>\n\n      <label htmlFor=\"instructions\">Instructions:</label>\n      <textarea\n        id=\"instructions\"\n        value={instructions}\n        onChange={(e) => setInstructions(e.target.value)}\n        required\n      ></textarea>\n\n      <label htmlFor=\"image\">Image:</label>\n      <input\n        type=\"file\"\n        id=\"image\"\n        accept=\".jpg,.jpeg,.png\"\n        onChange={handleImageUpload}\n        required\n      />\n\n      <button type=\"submit\">Share Recipe</button>\n    </form>\n  );\n};\n\nexport default ShareRecipe;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}