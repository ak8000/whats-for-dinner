{"ast":null,"code":"var _jsxFileName = \"/Users/alexkondratiuk/Desktop/whats-for-dinner-1/front-end/src/RecipeDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport \"./RecipeDetails.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecipeDetails = props => {\n  _s();\n  const [item, setItem] = useState();\n  const [comment, setComment] = useState(\"\");\n  const [rating, setRating] = useState(0);\n  const {\n    recipeId\n  } = useParams();\n  const baseUrl = process.env.REACT_APP_SERVER;\n  const username = props.user.username;\n  const images = '/api/images/';\n  const [cleanedIngredients, setCleanedIngredients] = useState([]);\n  const [averageRating, setAverageRating] = useState(0);\n  useEffect(() => {\n    const fetchRecipe = async () => {\n      try {\n        const response = await fetch(`${baseUrl}/recipes/${recipeId}`);\n        const data = await response.json();\n        console.log(\"just data\", data);\n        console.log(\"Before setItem(): \", data);\n        setItem(data.recipe[0]);\n        console.log(\"After setItem(): \", item);\n        setAverageRating(data.recipe[0].Rating);\n        console.log(\"After setItem(): \", data.recipe[0].Rating);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    if (recipeId !== \" \") {\n      fetchRecipe();\n    }\n  }, [recipeId, baseUrl]);\n  useEffect(() => {\n    console.log(\"item after update: \", item);\n  }, [item]);\n  const handleCommentChange = e => {\n    setComment(e.target.value);\n  };\n  useEffect(() => {\n    if (item) {\n      const ing = item.Cleaned_Ingredients;\n      console.log(ing);\n      const clean1 = ing.replace(/\"/g, ' inches');\n      //const jsonString = JSON.stringify(clean1.map(item => item.replace(/\"/g, '\\\\\"')));\n      //return JSON.parse(jsonString.replace(/'/g, '\"'));\n      //const cleanedIngredients =jsonString.replace(/'/g, '\"');\n      console.log(clean1.replace(/'/g, \"\\\"\"));\n      const ingredientsArr = JSON.parse(clean1.replace(/'/g, \"\\\"\"));\n      const ingredientsList = ingredientsArr.map(ingredient => {\n        return ingredient.replace(/\"/g, \"\").replace(/\"/g, \"\\\"\");\n      });\n      setCleanedIngredients(ingredientsList);\n    }\n  }, [item]);\n  const handleRatingChange = e => {\n    setRating(parseInt(e.target.value));\n  };\n  const sendComment = async () => {\n    try {\n      const response = await fetch(`${baseUrl}/reviews`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          recipeId: item._id,\n          username: username,\n          comment,\n          rating\n        })\n      });\n      const data = await response.json();\n      console.log(data.message); // log the response from the server\n      setComment(\"\"); // clear the input fields\n      setRating(0);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSaveRecipe = async () => {\n    if (!props.user || !props.user.success) {\n      alert(\"Please sign in to save a recipe.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${baseUrl}/save-recipe/${recipeId}?username=${username}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          recipeId: item._id,\n          username: username\n        })\n      });\n      const data = await response.json();\n      console.log(data.message); // log the response from the server\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSubmit = e => {\n    if (!props.user || !props.user.success) {\n      alert(\"Please sign in to leave a comment.\");\n      return;\n    }\n    e.preventDefault();\n    sendComment();\n    // TODO: submit the comment and rating to the server\n    console.log(\"User:\", username);\n    console.log(\"Comment:\", comment);\n    console.log(\"Rating:\", rating);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !item ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${baseUrl}${images}${item.Image_Name}.jpg`,\n        alt: item._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: item.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredients\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 19\n        }, this), cleanedIngredients.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: cleanedIngredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: ingredient\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: item.Instructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Reviews\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average Rating: \", averageRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), item.Comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", comment.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"comment\",\n              children: \"Comment:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"comment\",\n              name: \"comment\",\n              value: comment,\n              onChange: handleCommentChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"rating\",\n              children: \"Rating:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"rating\",\n              name: \"rating\",\n              min: \"0\",\n              max: \"5\",\n              value: rating,\n              onChange: handleRatingChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-saved-recipes\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveRecipe,\n          children: \"Save Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 28\n    }, this)\n  }, void 0, false);\n};\n_s(RecipeDetails, \"r0R42D066e7m86iLadzVKk4ygew=\", false, function () {\n  return [useParams];\n});\n_c = RecipeDetails;\nexport default RecipeDetails;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeDetails","props","_s","item","setItem","comment","setComment","rating","setRating","recipeId","baseUrl","process","env","REACT_APP_SERVER","username","user","images","cleanedIngredients","setCleanedIngredients","averageRating","setAverageRating","fetchRecipe","response","fetch","data","json","console","log","recipe","Rating","error","handleCommentChange","e","target","value","ing","Cleaned_Ingredients","clean1","replace","ingredientsArr","JSON","parse","ingredientsList","map","ingredient","handleRatingChange","parseInt","sendComment","method","headers","body","stringify","_id","message","handleSaveRecipe","success","alert","handleSubmit","preventDefault","children","className","src","Image_Name","alt","fileName","_jsxFileName","lineNumber","columnNumber","Title","length","index","Instructions","Comments","onSubmit","htmlFor","id","name","onChange","type","min","max","onClick","_c","$RefreshReg$"],"sources":["/Users/alexkondratiuk/Desktop/whats-for-dinner-1/front-end/src/RecipeDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router\"\nimport \"./RecipeDetails.css\"\n\nconst RecipeDetails = (props) => {\n    const [item, setItem] = useState();\n    const [comment, setComment] = useState(\"\");\n    const [rating, setRating] = useState(0);\n    const {recipeId} = useParams();\n    const baseUrl = process.env.REACT_APP_SERVER;\n    const username = props.user.username;\n    const images = '/api/images/';\n    const [cleanedIngredients, setCleanedIngredients] = useState([]);\n    const [averageRating, setAverageRating] = useState(0);\n    useEffect(() => {\n        const fetchRecipe = async () => {\n            try {\n              const response = await fetch(`${baseUrl}/recipes/${recipeId}`);\n              const data = await response.json();\n              console.log(\"just data\", data);\n              console.log(\"Before setItem(): \", data);\n              setItem(data.recipe[0]);\n              console.log(\"After setItem(): \", item);\n              setAverageRating(data.recipe[0].Rating);\n              console.log(\"After setItem(): \", data.recipe[0].Rating);\n            } catch (error) {\n              console.error(error);\n            }\n          };\n      \n          if (recipeId !== \" \") {\n            fetchRecipe();\n          }\n    }, [recipeId, baseUrl]);\n\n    useEffect(() => {\n        console.log(\"item after update: \", item);\n      }, [item]);\n\n    const handleCommentChange = e => {\n        setComment(e.target.value);\n    };\n\n\n    \n    useEffect(() => {\n      if (item) {\n        const ing = item.Cleaned_Ingredients;\n        console.log(ing)\n        const clean1 = ing.replace(/\"/g, ' inches');\n        //const jsonString = JSON.stringify(clean1.map(item => item.replace(/\"/g, '\\\\\"')));\n        //return JSON.parse(jsonString.replace(/'/g, '\"'));\n        //const cleanedIngredients =jsonString.replace(/'/g, '\"');\n        console.log(clean1.replace(/'/g, \"\\\"\"))\n        const ingredientsArr = JSON.parse(clean1.replace(/'/g, \"\\\"\"))\n        const ingredientsList = ingredientsArr.map((ingredient) => {\n          return ingredient.replace(/\"/g, \"\").replace(/\"/g, \"\\\"\");\n        });\n        \n        setCleanedIngredients(ingredientsList);\n      }\n    }, [item]);\n    \n\n    const handleRatingChange = e => {\n        setRating(parseInt(e.target.value));\n    };\n    const sendComment = async () => {\n        try {\n          const response = await fetch(`${baseUrl}/reviews`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              recipeId: item._id,\n              username: username, \n              comment,\n              rating,\n            }),\n          });\n          const data = await response.json();\n          console.log(data.message); // log the response from the server\n          setComment(\"\"); // clear the input fields\n          setRating(0);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n      const handleSaveRecipe = async () => {\n        if (!props.user || !props.user.success) {\n          alert(\"Please sign in to save a recipe.\");\n          return;\n        }\n        try {\n          const response = await fetch(`${baseUrl}/save-recipe/${recipeId}?username=${username}`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              recipeId: item._id,\n              username: username,\n            }),\n          });\n          const data = await response.json();\n          console.log(data.message); // log the response from the server\n        } catch (error) {\n          console.error(error);\n        }\n      }; \n    const handleSubmit = e => {\n      if (!props.user || !props.user.success) {\n        alert(\"Please sign in to leave a comment.\");\n        return;\n      }\n        e.preventDefault();\n        sendComment();\n        // TODO: submit the comment and rating to the server\n        console.log(\"User:\", username);\n        console.log(\"Comment:\", comment);\n        console.log(\"Rating:\", rating);\n    };\n\n    return(\n        <>\n        {\n            (!item) ? \"\" : <div className=\"content\">\n                <img src={`${baseUrl}${images}${item.Image_Name}.jpg`} alt={item._id} />\n                <div className=\"title\">\n                    <h1>{item.Title}</h1>   \n                </div>\n                <div className=\"ingredients\">\n                  <h2>Ingredients</h2>\n                  {cleanedIngredients.length > 0 && (\n                  <ul>\n                    {cleanedIngredients.map((ingredient, index) => (\n                      <li key={index}>{ingredient}</li>\n                    ))}\n                  </ul>\n                )}\n                </div>\n                <div className=\"instructions\">\n                    <h2>Instructions</h2>\n                    <h4>{item.Instructions}</h4>\n                </div>\n                <div className=\"Reviews\">\n                    <h2>Reviews</h2>\n                    <p>Average Rating: {averageRating}</p>\n                    {item.Comments.map((comment, index) => (\n                        <div key={index}>\n                        <h3>{comment.username}</h3>\n                        <p>{comment.comment}</p>\n                        <p>Rating: {comment.rating}</p>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"comments\">\n                    <h2>Comments</h2>\n                    \n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"comment\">Comment:</label>\n                            <textarea \n                                id=\"comment\"\n                                name=\"comment\"\n                                value={comment}\n                                onChange={handleCommentChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"rating\">Rating:</label>\n                            <input \n                                type=\"number\"\n                                id=\"rating\"\n                                name=\"rating\"\n                                min=\"0\"\n                                max=\"5\"\n                                value={rating}\n                                onChange={handleRatingChange}\n                            />\n                        </div>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n\n                <div className=\"add-saved-recipes\">\n                <button onClick={handleSaveRecipe}>Save Recipe</button>\n\n                </div>\n\n            </div>\n        }\n        </>\n    )\n}\n\nexport default RecipeDetails"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}